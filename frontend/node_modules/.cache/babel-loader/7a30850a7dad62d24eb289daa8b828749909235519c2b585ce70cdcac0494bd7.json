{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import '../Profile.css';\n\n// const UserProfileUpdate = () => {\n//   const [formData, setFormData] = useState({\n//     experience: \"\",\n//     skills: [],\n//     preferred_role: \"\",\n//     interest_area: \"\",\n//     education: \"\",\n//     degree: \"\",\n//     certifications: \"\",\n//     projects: \"\",\n//     linkedin: \"\",\n//     github: \"\",\n//     expected_salary: \"\",\n//     location_preference: \"\",\n//     resume: null,\n//   });\n\n//   const skillsOptions = [\"Python\", \"Java\", \"React\", \"Machine Learning\"];\n//   const roleOptions = [\"Software Engineer\", \"Data Scientist\"];\n//   const interestAreas = [\"AI/ML\", \"Web Development\"];\n//   const degreeOptions = [\"Bachelor's\", \"Master's\"];\n//   const locationOptions = [\"Remote\", \"Onsite\"];\n\n//   useEffect(() => {\n//     const fetchProfile = async () => {\n//       const token = localStorage.getItem(\"token\");\n//       if (!token) {\n//         console.error(\"No token found. Please log in.\");\n//         return;\n//       }\n\n//       const response = await fetch(\"http://localhost:8000/profile\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ token }),\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         setFormData({\n//           ...data,\n//           resume: null,\n//         });\n//       } else {\n//         console.error(\"Error fetching profile:\", data.message);\n//       }\n//     };\n\n//     fetchProfile();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleMultiSelectChange = (e) => {\n//     const selectedSkills = Array.from(e.target.selectedOptions, (option) => option.value);\n//     setFormData((prev) => ({ ...prev, skills: selectedSkills }));\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFormData((prev) => ({ ...prev, resume: e.target.files[0] }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const token = localStorage.getItem(\"token\");\n//     if (!token) {\n//       alert(\"No token found. Please log in.\");\n//       return;\n//     }\n\n//     const formDataToSend = new FormData();\n//     formDataToSend.append(\"token\", token);\n//     for (const key in formData) {\n//       if (key === \"skills\") {\n//         formDataToSend.append(key, formData[key].join(\",\"));\n//       } else if (key === \"resume\" && formData.resume) {\n//         formDataToSend.append(key, formData.resume);\n//       } else {\n//         formDataToSend.append(key, formData[key]);\n//       }\n//     }\n\n//     const response = await fetch(\"http://localhost:8000/profile\", {\n//       method: \"PUT\",\n//       body: formDataToSend,\n//     });\n\n//     if (response.ok) {\n//       alert(\"Profile Updated Successfully!\");\n//     } else {\n//       alert(\"Update failed!\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-lg mt-6\">\n//       <h2 className=\"text-2xl font-bold mb-4 text-center\">Update Profile</h2>\n//       <form onSubmit={handleSubmit} className=\"grid grid-cols-1 gap-4\">\n//         <label className=\"block\">Experience:</label>\n//         <input className=\"border p-2 rounded\" type=\"number\" name=\"experience\" value={formData.experience} onChange={handleChange} />\n\n//         <label className=\"block\">Skills:</label>\n//         <select multiple className=\"border p-2 rounded\" onChange={handleMultiSelectChange}>\n//           {skillsOptions.map((skill) => (\n//             <option key={skill} value={skill} selected={formData.skills.includes(skill)}>\n//               {skill}\n//             </option>\n//           ))}\n//         </select>\n\n//         <label className=\"block\">Preferred Role:</label>\n//         <select className=\"border p-2 rounded\" name=\"preferred_role\" value={formData.preferred_role} onChange={handleChange}>\n//           {roleOptions.map((role) => (\n//             <option key={role} value={role}>\n//               {role}\n//             </option>\n//           ))}\n//         </select>\n\n//         <label className=\"block\">Interest Area:</label>\n//         <select className=\"border p-2 rounded\" name=\"interest_area\" value={formData.interest_area} onChange={handleChange}>\n//           {interestAreas.map((area) => (\n//             <option key={area} value={area}>\n//               {area}\n//             </option>\n//           ))}\n//         </select>\n\n//         <label className=\"block\">Education:</label>\n//         <input className=\"border p-2 rounded\" type=\"text\" name=\"education\" value={formData.education} onChange={handleChange} />\n\n//         <label className=\"block\">Certifications:</label>\n//         <input className=\"border p-2 rounded\" type=\"text\" name=\"certifications\" value={formData.certifications} onChange={handleChange} />\n\n//         <label className=\"block\">Resume Upload:</label>\n//         <input className=\"border p-2 rounded\" type=\"file\" name=\"resume\" onChange={handleFileChange} />\n\n//         <button className=\"bg-blue-500 text-white p-2 rounded mt-4 hover:bg-blue-700\" type=\"submit\">\n//           Update Profile\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UserProfileUpdate;","map":{"version":3,"names":[],"sources":["/Users/sonaselvaraj/Documents/Capstone/AI Interviewer 2/AI_Interviewer/frontend/src/components/UserProfileUpdate.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import '../Profile.css';\n\n\n// const UserProfileUpdate = () => {\n//   const [formData, setFormData] = useState({\n//     experience: \"\",\n//     skills: [],\n//     preferred_role: \"\",\n//     interest_area: \"\",\n//     education: \"\",\n//     degree: \"\",\n//     certifications: \"\",\n//     projects: \"\",\n//     linkedin: \"\",\n//     github: \"\",\n//     expected_salary: \"\",\n//     location_preference: \"\",\n//     resume: null,\n//   });\n\n//   const skillsOptions = [\"Python\", \"Java\", \"React\", \"Machine Learning\"];\n//   const roleOptions = [\"Software Engineer\", \"Data Scientist\"];\n//   const interestAreas = [\"AI/ML\", \"Web Development\"];\n//   const degreeOptions = [\"Bachelor's\", \"Master's\"];\n//   const locationOptions = [\"Remote\", \"Onsite\"];\n\n//   useEffect(() => {\n//     const fetchProfile = async () => {\n//       const token = localStorage.getItem(\"token\");\n//       if (!token) {\n//         console.error(\"No token found. Please log in.\");\n//         return;\n//       }\n\n//       const response = await fetch(\"http://localhost:8000/profile\", {\n//         method: \"POST\",\n//         headers: { \"Content-Type\": \"application/json\" },\n//         body: JSON.stringify({ token }),\n//       });\n\n//       const data = await response.json();\n//       if (response.ok) {\n//         setFormData({\n//           ...data,\n//           resume: null,\n//         });\n//       } else {\n//         console.error(\"Error fetching profile:\", data.message);\n//       }\n//     };\n\n//     fetchProfile();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   const handleMultiSelectChange = (e) => {\n//     const selectedSkills = Array.from(e.target.selectedOptions, (option) => option.value);\n//     setFormData((prev) => ({ ...prev, skills: selectedSkills }));\n//   };\n\n//   const handleFileChange = (e) => {\n//     setFormData((prev) => ({ ...prev, resume: e.target.files[0] }));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     const token = localStorage.getItem(\"token\");\n//     if (!token) {\n//       alert(\"No token found. Please log in.\");\n//       return;\n//     }\n\n//     const formDataToSend = new FormData();\n//     formDataToSend.append(\"token\", token);\n//     for (const key in formData) {\n//       if (key === \"skills\") {\n//         formDataToSend.append(key, formData[key].join(\",\"));\n//       } else if (key === \"resume\" && formData.resume) {\n//         formDataToSend.append(key, formData.resume);\n//       } else {\n//         formDataToSend.append(key, formData[key]);\n//       }\n//     }\n\n//     const response = await fetch(\"http://localhost:8000/profile\", {\n//       method: \"PUT\",\n//       body: formDataToSend,\n//     });\n\n//     if (response.ok) {\n//       alert(\"Profile Updated Successfully!\");\n//     } else {\n//       alert(\"Update failed!\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-4xl mx-auto p-6 bg-white shadow-lg rounded-lg mt-6\">\n//       <h2 className=\"text-2xl font-bold mb-4 text-center\">Update Profile</h2>\n//       <form onSubmit={handleSubmit} className=\"grid grid-cols-1 gap-4\">\n//         <label className=\"block\">Experience:</label>\n//         <input className=\"border p-2 rounded\" type=\"number\" name=\"experience\" value={formData.experience} onChange={handleChange} />\n\n//         <label className=\"block\">Skills:</label>\n//         <select multiple className=\"border p-2 rounded\" onChange={handleMultiSelectChange}>\n//           {skillsOptions.map((skill) => (\n//             <option key={skill} value={skill} selected={formData.skills.includes(skill)}>\n//               {skill}\n//             </option>\n//           ))}\n//         </select>\n\n//         <label className=\"block\">Preferred Role:</label>\n//         <select className=\"border p-2 rounded\" name=\"preferred_role\" value={formData.preferred_role} onChange={handleChange}>\n//           {roleOptions.map((role) => (\n//             <option key={role} value={role}>\n//               {role}\n//             </option>\n//           ))}\n//         </select>\n\n//         <label className=\"block\">Interest Area:</label>\n//         <select className=\"border p-2 rounded\" name=\"interest_area\" value={formData.interest_area} onChange={handleChange}>\n//           {interestAreas.map((area) => (\n//             <option key={area} value={area}>\n//               {area}\n//             </option>\n//           ))}\n//         </select>\n\n//         <label className=\"block\">Education:</label>\n//         <input className=\"border p-2 rounded\" type=\"text\" name=\"education\" value={formData.education} onChange={handleChange} />\n\n//         <label className=\"block\">Certifications:</label>\n//         <input className=\"border p-2 rounded\" type=\"text\" name=\"certifications\" value={formData.certifications} onChange={handleChange} />\n\n//         <label className=\"block\">Resume Upload:</label>\n//         <input className=\"border p-2 rounded\" type=\"file\" name=\"resume\" onChange={handleFileChange} />\n\n//         <button className=\"bg-blue-500 text-white p-2 rounded mt-4 hover:bg-blue-700\" type=\"submit\">\n//           Update Profile\n//         </button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UserProfileUpdate;\n"],"mappings":"AAAA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}