{"ast":null,"code":"var _jsxFileName = \"/Users/sonaselvaraj/Documents/Capstone/AI Interviewer 2/AI_Interviewer/frontend/src/components/CodeCompiler.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport * as Babel from '@babel/standalone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeCompiler = () => {\n  _s();\n  const [code, setCode] = useState('// Write JavaScript code here\\nconsole.log(\"Hello, World!\")');\n  const [compiledCode, setCompiledCode] = useState('');\n  const handleCodeChange = event => {\n    setCode(event.target.value);\n  };\n  const handleCompile = () => {\n    try {\n      const result = Babel.transform(code, {\n        presets: ['env']\n      }).code;\n      setCompiledCode(result);\n    } catch (error) {\n      setCompiledCode('Error in compilation');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"React Compiler\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      style: {\n        width: '100%',\n        height: '200px'\n      },\n      value: code,\n      onChange: handleCodeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCompile,\n      children: \"Compile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Compiled Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SyntaxHighlighter, {\n      language: \"javascript\",\n      style: docco,\n      children: compiledCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeCompiler, \"wnaQAqjGg8wXWweYw+SJdYmTwDM=\");\n_c = CodeCompiler;\nexport default CodeCompiler;\nvar _c;\n$RefreshReg$(_c, \"CodeCompiler\");","map":{"version":3,"names":["React","useState","Light","SyntaxHighlighter","docco","Babel","jsxDEV","_jsxDEV","CodeCompiler","_s","code","setCode","compiledCode","setCompiledCode","handleCodeChange","event","target","value","handleCompile","result","transform","presets","error","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","onChange","onClick","language","_c","$RefreshReg$"],"sources":["/Users/sonaselvaraj/Documents/Capstone/AI Interviewer 2/AI_Interviewer/frontend/src/components/CodeCompiler.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Light as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\nimport * as Babel from '@babel/standalone';\n\nconst CodeCompiler = () => {\n  const [code, setCode] = useState('// Write JavaScript code here\\nconsole.log(\"Hello, World!\")');\n  const [compiledCode, setCompiledCode] = useState('');\n\n  const handleCodeChange = (event) => {\n    setCode(event.target.value);\n  };\n\n  const handleCompile = () => {\n    try {\n      const result = Babel.transform(code, { presets: ['env'] }).code;\n      setCompiledCode(result);\n    } catch (error) {\n      setCompiledCode('Error in compilation');\n    }\n  };\n\n  return (\n    <div>\n      <h2>React Compiler</h2>\n      <textarea\n        style={{ width: '100%', height: '200px' }}\n        value={code}\n        onChange={handleCodeChange}\n      />\n      <button onClick={handleCompile}>Compile</button>\n\n      <h3>Compiled Code</h3>\n      <SyntaxHighlighter language=\"javascript\" style={docco}>\n        {compiledCode}\n      </SyntaxHighlighter>\n    </div>\n  );\n};\n\nexport default CodeCompiler;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,IAAIC,iBAAiB,QAAQ,0BAA0B;AACrE,SAASC,KAAK,QAAQ,+CAA+C;AACrE,OAAO,KAAKC,KAAK,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,6DAA6D,CAAC;EAC/F,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMa,gBAAgB,GAAIC,KAAK,IAAK;IAClCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI;MACF,MAAMC,MAAM,GAAGd,KAAK,CAACe,SAAS,CAACV,IAAI,EAAE;QAAEW,OAAO,EAAE,CAAC,KAAK;MAAE,CAAC,CAAC,CAACX,IAAI;MAC/DG,eAAe,CAACM,MAAM,CAAC;IACzB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdT,eAAe,CAAC,sBAAsB,CAAC;IACzC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBpB,OAAA;MACEqB,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAC1Cb,KAAK,EAAEP,IAAK;MACZqB,QAAQ,EAAEjB;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFpB,OAAA;MAAQyB,OAAO,EAAEd,aAAc;MAAAK,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEhDpB,OAAA;MAAAgB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBpB,OAAA,CAACJ,iBAAiB;MAAC8B,QAAQ,EAAC,YAAY;MAACL,KAAK,EAAExB,KAAM;MAAAmB,QAAA,EACnDX;IAAY;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV,CAAC;AAAClB,EAAA,CAjCID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAmClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}